apiVersion: v1
data:
  alerting_rules.yml: |
    groups:
    - name: spinnaker-services-is-down
      rules:
      - alert: clouddriver-is-down
        expr: absent(up{job="opsmx_spinnaker_metrics", service="spin-clouddriver", namespace="oes" }) == 1 
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is not responding"
          summary: One or more Spinnaker services are down 
        labels:
          severity: critical
      - alert: gate-is-down
        expr: absent(up{job="opsmx_spinnaker_metrics", service="spin-gate", namespace="oes" }) == 1 
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is not responding"
          summary: One or more Spinnaker services are down 
        labels:
          severity: critical
      - alert: orca-is-down
        expr: absent(up{job="opsmx_spinnaker_metrics", service="spin-orca", namespace="oes" }) == 1
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is not responding"
          summary: One or more Spinnaker services are down 
        labels:
          severity: critical
      - alert: igor-is-down
        expr: absent(up{job="opsmx_spinnaker_metrics", service="spin-igor", namespace="oes" }) == 1
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is not responding"
          summary: One or more Spinnaker services are down 
        labels:
          severity: critical
      - alert: echo-is-down
        expr: absent(up{job="opsmx_spinnaker_metrics", service="spin-echo", namespace="oes" }) == 1
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is not responding"
          summary: One or more Spinnaker services are down 
        labels:
          severity: critical
      - alert: front50-is-down
        expr: absent(up{job="opsmx_spinnaker_metrics", service="spin-front50", namespace="oes" }) == 1
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is not responding"
          summary: One or more Spinnaker services are down 
        labels:
          severity: critical
    - name: latency-too-high
      rules:
      - alert: latency-too-high
        expr: sum(irate(clouddriver:executionCount_total{status="success"}[1m])) by (instance) > .5 
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is slow ({{$value}} per minute)"
          summary: latency of a service is too high
      - alert: latency-too-high
        expr: sum(irate(gate:executionCount_total{status="success"}[1m])) by (instance) > .5 
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is slow ({{$value}} per minute)"
          summary: latency of a service is too high
      - alert: latency-too-high
        expr: sum(irate(orca:executionCount_total{status="success"}[1m])) by (instance) > .5 
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is slow ({{$value}} per minute)"
          summary: latency of a service is too high
      - alert: latency-too-high
        expr: sum(irate(igor:executionCount_total{status="success"}[1m])) by (instance) > .5 
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is slow ({{$value}} per minute)"
          summary: latency of a service is too high
      - alert: latency-too-high
        expr: sum(irate(echo:executionCount_total{status="success"}[1m])) by (instance) > .5 
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is slow ({{$value}} per minute)"
          summary: latency of a service is too high
      - alert: latency-too-high
        expr: sum(irate(front50:executionCount_total{status="success"}[1m])) by (instance) > .5 
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} is slow ({{$value}} per minute)"
          summary: latency of a service is too high
    - name: jvm-too-high
      rules:
      - alert: pod-may-be-evicted-soon 
        expr: (sum(clouddriver:jvm:memory:used) by (instance) / sum(clouddriver:jvm:memory:max) by (instance)) > .9
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} may be evicted soon"
          summary: 
      - alert: pod-may-be-evicted-soon 
        expr: (sum(gate:jvm:memory:used) by (instance) / sum(gate:jvm:memory:max) by (instance)) > .9
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} may be evicted soon"
          summary: 
      - alert: pod-may-be-evicted-soon 
        expr: (sum(orca:jvm:memory:used) by (instance) / sum(orca:jvm:memory:max) by (instance)) > .9
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} may be evicted soon"
          summary: 
      - alert: pod-may-be-evicted-soon 
        expr: (sum(igor:jvm:memory:used) by (instance) / sum(igor:jvm:memory:max) by (instance)) > .9
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} may be evicted soon"
          summary: 
      - alert: pod-may-be-evicted-soon 
        expr: (sum(echo:jvm:memory:used) by (instance) / sum(echo:jvm:memory:max) by (instance)) > .9
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} may be evicted soon"
          summary: 
      - alert: pod-may-be-evicted-soon 
        expr: (sum(front50:jvm:memory:used) by (instance) / sum(front50:jvm:memory:max) by (instance)) > .9
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} may be evicted soon"
          summary: 
    - name: orca-queue-issue
      rules:
      - alert: orca-queue-depth-high
        expr: (sum(orca:queue:ready:depth{namespace="oes"}) by (instance) ) > 10
        labels:
          severity: warning
        annotations:
          description: "Service {{$labels.service}} in namespace {{$labels.namespace}} may be evicted soon"
          summary: Orca queue depth is high
      - alert: orca-queue-lag-high
        expr: sum(rate (orca:controller:invocations__totalTime_totall[1m]) ) by (instance)  / sum(rate(orca:controller:invocations__count_total[1m])) by (instance) > 0.5
        labels:
          severity: warning
        annotations:
          description: "Lag = {{$value}}"
          summary: Orca queue lag is high
    - name: igor-needs-attention
      rules:
      - alert: igor-needs-attention
        expr: igor:pollingMonitor:itemsOverThreshold{namespace="oes"} > 0
        labels:
          severity: crtical
        annotations:
          description: "Ignore in namespace {{$labels.namespace}} needs human help"
          summary: Igor needs attention
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 5s
      scrape_timeout: 2s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: opsmx_spinnaker_metrics
      honor_labels: true
      metrics_path: /prometheus_metrics
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - oes
      relabel_configs:
        - action: keep
          source_labels:
          - __meta_kubernetes_service_label_app
          regex: spin
        - action: keep
          source_labels:
          - __meta_kubernetes_pod_container_port_number
          regex: "8008"
        - source_labels:
          - __meta_kubernetes_endpoint_address_target_kind
          - __meta_kubernetes_endpoint_address_target_name
          separator: ;
          regex: Node;(.*)
          replacement: ${1}
          target_label: node
        - source_labels:
          - __meta_kubernetes_endpoint_address_target_kind
          - __meta_kubernetes_endpoint_address_target_name
          separator: ;
          regex: Pod;(.*)
          replacement: ${1}
          target_label: pod
        - source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - source_labels:
          - __meta_kubernetes_service_name
          target_label: service
        - source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - target_label: endpoint
          replacement: "8008"
    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: srini
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: prometheus
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_component]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_probe]
          regex: .*
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex:
          action: drop
  recording_rules.yml: |
    {}
  rules: |
    {}
## STUFF that can be added to the bottom of the relable_configs for selecting one or two lables
#        - source_labels: [ __name__ ]
#          regex: '(clouddriver:redis:command:invocation:pipelined_total|clouddriver:cats:redisCache:evict:itemCount_total)'
#          action: keep

## Stuff that can be added to limit to a specific service-name(s) from k8s
#        - source_labels:
#          - __meta_kubernetes_service_name
#          target_label: job
#          regex: spin-clouddriver
#          action: keep
#        expr: sum (rate(gate:controller:invocations__percentile_total[2m])) > 0.95 or

kind: ConfigMap
metadata:
  labels:
    app: prometheus
    chart: prometheus-10.4.0
    component: server
    heritage: Helm
    release: prometheus-1584018984
  name: prometheus-1584018984-server
  namespace: srini
