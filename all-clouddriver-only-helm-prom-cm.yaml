apiVersion: v1
data:
  alerting_rules.yml: |
    {}
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: opsmx_spinnaker_metrics
      honor_labels: true
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - oes
      relabel_configs:
        - action: keep
          source_labels:
          - __meta_kubernetes_service_label_app
          regex: spin
        - action: keep
          source_labels:
          - __meta_kubernetes_pod_container_port_number
          regex: "8008"
        - source_labels:
          - __meta_kubernetes_endpoint_address_target_kind
          - __meta_kubernetes_endpoint_address_target_name
          separator: ;
          regex: Node;(.*)
          replacement: ${1}
          target_label: node
        - source_labels:
          - __meta_kubernetes_endpoint_address_target_kind
          - __meta_kubernetes_endpoint_address_target_name
          separator: ;
          regex: Pod;(.*)
          replacement: ${1}
          target_label: pod
        - source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - source_labels:
          - __meta_kubernetes_service_name
          target_label: service
        - source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - source_labels:
          - __meta_kubernetes_service_name
          target_label: job
          regex: spin-clouddriver
          action: keep
        - target_label: endpoint
          replacement: "8008"
      metrics_path: /prometheus_metrics
    alerting:
      alertmanagers:
#      - kubernetes_sd_configs:
#          - role: pod
#        tls_config:
#          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#        relabel_configs:
#        - source_labels: [__meta_kubernetes_namespace]
#          regex: prom-helm
#          action: keep
#        - source_labels: [__meta_kubernetes_pod_label_app]
#          regex: prometheus
#          action: keep
#        - source_labels: [__meta_kubernetes_pod_label_component]
#          regex: alertmanager
#          action: keep
#        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_probe]
#          regex: .*
#          action: keep
#        - source_labels: [__meta_kubernetes_pod_container_port_number]
#          regex:
#          action: drop
  recording_rules.yml: |
    {}
  rules: |
    {}
kind: ConfigMap
metadata:
  annotations:
  labels:
    app: prometheus
    chart: prometheus-10.4.0
    component: server
    heritage: Helm
    release: prometheus-1581411076
  name: prometheus-1581411076-server
  namespace: prom-helm

#    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#      job_name: kubernetes-apiservers
#      kubernetes_sd_configs:
#      - role: endpoints
#      relabel_configs:
#      - action: keep
#        regex: default;kubernetes;https
#        source_labels:
#        - __meta_kubernetes_namespace
#        - __meta_kubernetes_service_name
#        - __meta_kubernetes_endpoint_port_name
#      scheme: https
#      tls_config:
#        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#        insecure_skip_verify: true
#      - action: labelmap
#        regex: __meta_kubernetes_service_label_(.+)
#      relabel_configs:
#      - action: drop # keep
#        regex: true
#        source_labels:
#        - __meta_kubernetes_service_annotation_prometheus_io_scrape
#      - action: drop # replace
#        regex: (https?)
#        source_labels:
#        - __meta_kubernetes_service_annotation_prometheus_io_scheme
#        target_label: __scheme__
#      - action: drop # replace
#        regex: (.+)
#        source_labels:
#        - __meta_kubernetes_service_annotation_prometheus_io_path
#        target_label: __metrics_path__
#      - action: drop # replace
#        regex: ([^:]+)(?::\d+)?;(\d+)
#        replacement: $1:$2
#        source_labels:
#        - __address__
#        - __meta_kubernetes_service_annotation_prometheus_io_port
#        target_label: __address__
#      - action: drop # replace
#        source_labels:
#        - __meta_kubernetes_namespace
#        target_label: kubernetes_namespace
#      - action: drop # replace
#        source_labels:
#        - __meta_kubernetes_service_name
#        target_label: kubernetes_name
#      - action: drop # replace
#        source_labels:
#        - __meta_kubernetes_pod_node_name
#        target_label: kubernetes_node

#        - source_labels: 
#          - __name__
#          regex: "(clouddriver:redis:command:invocation:.*)"
#          action: keep
